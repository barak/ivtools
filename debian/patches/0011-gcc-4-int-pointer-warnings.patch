From: "Barak A. Pearlmutter" <barak+git@cs.nuim.ie>
Date: Wed, 4 Apr 2012 15:34:29 +0100
Subject: gcc 4 int pointer warnings

Use intptr_t instead of int for integral values cast to void *,
avoiding warnings in at least g++ 4.7.  Note that as of g++ 4.7, the
header file <inttypes.h> is needed to declare intptr_t.
---
 src/IV-2_6/button2_6.cc                |   13 +++++++------
 src/Unidraw/catalog.cc                 |   18 +++++++++---------
 src/Unidraw/dialogs.cc                 |    2 +-
 src/include/IV-2_6/InterViews/button.h |   13 +++++++------
 src/include/Unidraw/catalog.h          |   11 ++++++-----
 5 files changed, 30 insertions(+), 27 deletions(-)

diff --git a/src/IV-2_6/button2_6.cc b/src/IV-2_6/button2_6.cc
index e9fb518..6bd823f 100644
--- a/src/IV-2_6/button2_6.cc
+++ b/src/IV-2_6/button2_6.cc
@@ -41,6 +41,7 @@
 #include <InterViews/Bitmaps/radio.bm>
 #include <OS/math.h>
 #include <string.h>
+#include <inttypes.h>
 
 #include <IV-2_6/_enter.h>
 
@@ -357,7 +358,7 @@ TextButton::~TextButton() {
 }
 
 PushButton::PushButton(
-    const char* str, ButtonState* s, int v
+    const char* str, ButtonState* s, intptr_t v
 ) : TextButton(str, s, (void*)v) {
     Init();
 }
@@ -369,7 +370,7 @@ PushButton::PushButton(
 }
 
 PushButton::PushButton(
-    const char* name, const char* str, ButtonState* s, int v
+    const char* name, const char* str, ButtonState* s, intptr_t v
 ) : TextButton(name, str, s, (void*)v) {
     Init();
 }
@@ -445,7 +446,7 @@ static Bitmap* radioChosen;
 static Bitmap* radioBoth;
 
 RadioButton::RadioButton(
-    const char* str, ButtonState* s, int v
+    const char* str, ButtonState* s, intptr_t v
 ) : TextButton(str, s, (void*)v) {
     Init();
 }
@@ -457,7 +458,7 @@ RadioButton::RadioButton(
 }
 
 RadioButton::RadioButton(
-    const char* name, const char* str, ButtonState* s, int v
+    const char* name, const char* str, ButtonState* s, intptr_t v
 ) : TextButton(name, str, s, (void*)v) {
     Init();
 }
@@ -533,7 +534,7 @@ void RadioButton::Refresh() {
 }
 
 CheckBox::CheckBox(
-    const char* str, ButtonState* s, int on, int off
+    const char* str, ButtonState* s, intptr_t on, intptr_t off
 ) : TextButton(str, s, (void*)on) {
     Init((void*)off);
 }
@@ -545,7 +546,7 @@ CheckBox::CheckBox(
 }
 
 CheckBox::CheckBox(
-    const char* name, const char* str, ButtonState* s, int on, int off
+    const char* name, const char* str, ButtonState* s, intptr_t on, intptr_t off
 ) : TextButton(name, str, s, (void*)on) {
     Init((void*)off);
 }
diff --git a/src/Unidraw/catalog.cc b/src/Unidraw/catalog.cc
index bebb1c8..809992b 100644
--- a/src/Unidraw/catalog.cc
+++ b/src/Unidraw/catalog.cc
@@ -660,7 +660,7 @@ void Catalog::ReadExtraData (
     for (int i = 0; !in.eof() && !FoundDelim(delim, *extra_data); ++i) {
         char c;
         in.get(c);
-        extra_data->Insert((void*)(unsigned int)c, i);
+        extra_data->Insert((void*)(unsigned intptr_t)c, i);
     }
 }
 
@@ -1987,16 +1987,16 @@ void Catalog::Register (Tool* o, const char* name) {
 
 class VoidIntElem : public UMapElem {
 public:
-    VoidIntElem(void*, int);
+    VoidIntElem(void*, intptr_t);
 
     virtual void* id();
     virtual void* tag();
 private:
     void* _object;
-    int _id;
+    intptr_t _id;
 };
 
-VoidIntElem::VoidIntElem (void* object, int id) {
+VoidIntElem::VoidIntElem (void* object, intptr_t id) {
     _object = object;
     _id = id;
 }
@@ -2064,7 +2064,7 @@ inline ObjectMapElem* ObjectMap::Find (void* obj) {
     return (ObjectMapElem*) _objKeys.Find(obj);
 }
 
-inline ObjectMapElem* ObjectMap::Find (int id) {
+inline ObjectMapElem* ObjectMap::Find (intptr_t id) {
     return (ObjectMapElem*) _idKeys.Find((void*) id);
 }
 
@@ -2075,7 +2075,7 @@ ObjectMap::ObjectMap (
     _id = id;
 }
 
-void ObjectMap::Register (void* obj, int id) {
+void ObjectMap::Register (void* obj, intptr_t id) {
     VoidIntElem* elem = new VoidIntElem(obj, id);
     UMap::Register(elem);
     ObjectMapElem* objElem = new ObjectMapElem(elem);
@@ -2085,7 +2085,7 @@ void ObjectMap::Register (void* obj, int id) {
 }
 
 void ObjectMap::Register (
-    void* obj, int id, ClassId orig_id, const char* delim, UArray* extra_data
+    void* obj, intptr_t id, ClassId orig_id, const char* delim, UArray* extra_data
 ) {
     VoidIntElem* elem = new VoidIntElem(obj, id);
     UMap::Register(elem);
@@ -2106,7 +2106,7 @@ void ObjectMap::Unregister (void* obj) {
     }
 }
 
-void ObjectMap::Unregister (int id) {
+void ObjectMap::Unregister (intptr_t id) {
     ObjectMapElem* idElem = Find(id);
 
     if (idElem != nil) {
@@ -2118,7 +2118,7 @@ void ObjectMap::Unregister (int id) {
 void* ObjectMap::GetClient () { return _client; }
 ClassId ObjectMap::GetClientId () { return _id; }
 
-void* ObjectMap::GetObject (int id) { 
+void* ObjectMap::GetObject (intptr_t id) {
     ObjectMapElem* idElem = Find(id);
     return (idElem == nil) ? nil : idElem->GetObject();
 }
diff --git a/src/Unidraw/dialogs.cc b/src/Unidraw/dialogs.cc
index a7dd2f2..5db3761 100644
--- a/src/Unidraw/dialogs.cc
+++ b/src/Unidraw/dialogs.cc
@@ -424,7 +424,7 @@ Interactor* PrintDialog::Interior () {
                         "send to printer via a command, or ", _dest, true
                     ),
                     new VGlue(space/3, 0),
-                    new RadioButton("save in file:", _dest, int(false))
+                    new RadioButton("save in file:", _dest, intptr_t(false))
                 )
             ),
             new VGlue(space, 0),
diff --git a/src/include/IV-2_6/InterViews/button.h b/src/include/IV-2_6/InterViews/button.h
index 2e6111f..2bdecf6 100644
--- a/src/include/IV-2_6/InterViews/button.h
+++ b/src/include/IV-2_6/InterViews/button.h
@@ -30,6 +30,7 @@
 #ifndef ivlook2_6_button_h
 #define ivlook2_6_button_h
 
+#include <inttypes.h>
 #include <IV-2_6/InterViews/interactor.h>
 #include <IV-2_6/InterViews/subject.h>
 
@@ -113,9 +114,9 @@ private:
 
 class PushButton : public TextButton {
 public:
-    PushButton(const char*, ButtonState*, int);
+    PushButton(const char*, ButtonState*, intptr_t);
     PushButton(const char*, ButtonState*, void*);
-    PushButton(const char*, const char*, ButtonState*, int);
+    PushButton(const char*, const char*, ButtonState*, intptr_t);
     PushButton(const char*, const char*, ButtonState*, void*);
     virtual ~PushButton();
 
@@ -129,9 +130,9 @@ private:
 
 class RadioButton : public TextButton {
 public:
-    RadioButton(const char*, ButtonState*, int);
+    RadioButton(const char*, ButtonState*, intptr_t);
     RadioButton(const char*, ButtonState*, void*);
-    RadioButton(const char*, const char*, ButtonState*, int);
+    RadioButton(const char*, const char*, ButtonState*, intptr_t);
     RadioButton(const char*, const char*, ButtonState*, void*);
     virtual ~RadioButton();
 
@@ -145,9 +146,9 @@ private:
 
 class CheckBox : public TextButton {
 public:
-    CheckBox(const char*, ButtonState*, int, int);
+    CheckBox(const char*, ButtonState*, intptr_t, intptr_t);
     CheckBox(const char*, ButtonState*, void*, void*);
-    CheckBox(const char*, const char*, ButtonState*, int, int);
+    CheckBox(const char*, const char*, ButtonState*, intptr_t, intptr_t);
     CheckBox(const char*, const char*, ButtonState*, void*, void*);
     virtual ~CheckBox();
 
diff --git a/src/include/Unidraw/catalog.h b/src/include/Unidraw/catalog.h
index 5aa3fca..0004394 100644
--- a/src/include/Unidraw/catalog.h
+++ b/src/include/Unidraw/catalog.h
@@ -27,6 +27,7 @@
 #ifndef unidraw_catalog_h
 #define unidraw_catalog_h
 
+#include <inttypes.h>
 #include <Unidraw/classes.h>
 #include <Unidraw/uformat.h>
 #include <Unidraw/uhash.h>
@@ -248,18 +249,18 @@ class ObjectMap : public UMap {
 public:
     ObjectMap(void* client, ClassId clientId);
 
-    void Register(void* obj, int id);
+    void Register(void* obj, intptr_t id);
     void Register(
-        void* obj, int id, ClassId orig_id, const char* delim,
+        void* obj, intptr_t id, ClassId orig_id, const char* delim,
         UArray* extra_data
     );
     void Unregister(void* obj);
-    void Unregister(int id);
+    void Unregister(intptr_t id);
 
     void* GetClient();
     ClassId GetClientId();
 
-    void* GetObject(int id);
+    void* GetObject(intptr_t id);
     unsigned long GetId(void* obj);
 
     ClassId GetOrigClassId(void* obj);
@@ -267,7 +268,7 @@ public:
     UArray* GetExtraData(void* obj);
 protected:
     ObjectMapElem* Find(void*);
-    ObjectMapElem* Find(int);
+    ObjectMapElem* Find(intptr_t);
 protected:
     UHashTable _objKeys, _idKeys;
     void* _client;
