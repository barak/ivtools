Index: ivtools-1.2/config/site.def.DEBIAN
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ivtools-1.2/config/site.def.DEBIAN	2009-09-04 22:20:41.000000000 -0400
@@ -0,0 +1,122 @@
+/* This file should be included when compiling for Debian
+   there are some further improvements here, which propably apply
+  to other Linux distributions too. So it's ok to include this file anyhow 
+*/
+
+#define maj 1
+
+#undef PSFontDir
+#define PSFontDir /usr/lib/ghostscript/fonts
+
+/* 
+ * Command to create shared libraries 
+ * On Debian shared libraries are linked explicitely with the libraries they 
+ * depend on. This allows ldd to be used to create dependecies for packages
+ *
+ * src/IV/Imakefile:
+ * 
+ * add Use_libDebian in order to get linking right
+ * 
+ * src/Attribute/Imakefile:
+ * remove uselibInterviews !!
+ */
+
+#ifndef Use_libDebian
+#define Use_libDebian()                 @@\
+       DEPLIBX11 = Dep_libX11                                          @@\
+          DEPLIBM = Dep_libm                                            @@\
+                                                                        @@\
+       LIBDIRPATH = LibDirPath                                          @@\
+      XLIBDIRPATH = XLibDirPath                                         @@\
+         LDLIBX11 = Ld_libX11                                           @@\
+           LDLIBM = Ld_libm                                             @@\
+    ABSLIBDIRPATH = AbsLibDirPath
+#endif
+
+#undef SharedLibraryCmd
+#define SharedLibraryCmd(ldobjs,libname) c++ -shared -Wl,-soname,Concat(lib,libname.so.maj) \
+        -o $@ ldobjs $(CCDEPLIBS) $(CCLDLIBS) -lc
+
+/*
+ *  Install a shared library on Debian.
+ *  This is Debian specific, because we need to create the link 
+ *  ldconfig would create 
+ */
+
+#undef InstallDynamicSharedLibrary
+#define InstallDynamicSharedLibrary(libname,rev,dest)                   @@\
+install:: Concat(lib,libname.so.rev)                                    @@\
+	MakeDir(dest)                                                   @@\
+	$(INSTALL) -c $(INSTLIBFLAGS) Concat(lib,libname.so.rev) dest   @@\
+	-@if [ -f dest/Concat(lib,libname.so) ]; then exit 0; else \    @@\
+	$(LN) Concat(lib,libname.so.rev) dest/Concat(lib,libname.so.maj);\   @@\
+	$(LN) Concat(lib,libname.so.maj) dest/Concat(lib,libname.so); fi
+
+
+
+/* 
+ * Create a dynamic shared Library on Debian 
+ * This version removes the link when clean is called and works
+ * together with SharedLibraryCmd (above) to produce the desired effect
+ * for the -soname flag.
+ */
+
+#ifndef NormalDynamicSharedLibraryTarget
+#define NormalDynamicSharedLibraryTarget(libname,rev,depobjs,ldobjs)    @@\
+AOUT = Concat(lib,libname.so.rev)                                       @@\
+SHARED_CCFLAGS = SharedCCFlags                                          @@\
+                                                                        @@\
+AllTarget(Concat(lib,libname.so.rev))                                   @@\
+                                                                        @@\
+Concat(lib,libname.so.rev): depobjs                                     @@\
+	@echo "building $@"                                             @@\
+	$(RM) $@                                                        @@\
+	SharedLibraryCmd(ldobjs,libname)                                @@\
+	$(RM) Concat(lib,libname.so)                                    @@\
+	$(LN) $@ Concat(lib,libname.so)                                 @@\
+                                                                        @@\
+clean::                                                                 @@\
+	$(RM) Concat(lib,libname.so.rev)  Concat(lib,libname.so)
+#endif
+
+/* 
+ * Use the systems TIFF library (change in config/InterViews/TIFF.def) 
+ * the define of Ld_libX11 includes the installed tiff library in the
+ * linker flags
+ * 
+ * config/InterViews/TIFF.def: 
+ 
+#ifdef CompileTIFF
+
+  #ifndef MakeTIFFCObjectRule
+  #define MakeTIFFCObjectRule(dst,src,flags)                            @@\
+  $(AOUT): dst.o                                                                @@\
+  dst.o: src.c                                                          @@\
+        @$(RM) dst.o                                                    @@\
+        $(TIFF_CDRIVER) $(TIFF_CFLAGS) flags -c src.c
+#endif
+
+#else
+#define  MakeTIFFCObjectRule(dst,src,flags) 
+#endif
+
+ */
+
+#ifdef CompileTIFF
+#undef CompileTIFF
+#endif
+
+#define Ld_libX11 -lX11 -ltiff -ljpeg -lz AceCCLdLibs
+
+
+
+/* Build only for SGI Motif 
+ (makes library smaller ?)
+*/
+
+#ifndef KitFlags
+#define KitFlags \
+-Dsgi_motif_kit \
+-Dmotif_kit \
+-Ddefault_kit=SMFKit
+#endif
